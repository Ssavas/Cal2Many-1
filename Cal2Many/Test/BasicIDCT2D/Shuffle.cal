
actor Shuffle( int sz )
    int(size=sz) X0, int(size=sz) X1, int(size=sz) X2, int(size=sz) X3 ==>
    int(size=sz) Y0, int(size=sz) Y1, int(size=sz) Y2, int(size=sz) Y3 :

  int(size=sz) x4;
  int(size=sz) x5;
  int(size=sz) x6h;
  int(size=sz) x7h;
  int(size=27) x6l;
  int(size=27) x7l;

  a0: action X0:[a], X1:[b], X2:[c], X3:[d] ==> Y0:[a], Y1:[b]
  do
    x4 := c;
    x5 := d;
  end

  a1: action X0:[x2], X1:[a], X2:[x3], X3:[b] ==> Y2:[x2], Y3:[x3]
  var
    // Split into lower 8 bits and the upper part
    int(size=sz-8) ah = rshift(a,8),
    int(size=sz-8) bh = rshift(b,8),
    int(size=9) al = bitand(a,255),
    int(size=9) bl = bitand(b,255)
  do
    x6h := 181*(ah+bh);
    x7h := 181*(ah-bh);
    x6l := (181*(al+bl)) + 128;
    x7l := (181*(al-bl)) + 128;
  end

  a2: action ==> Y0:[x4], Y1:[x5], Y2:[x6h + rshift(x6l,8)], Y3:[x7h + rshift(x7l,8)] end

  schedule fsm s0 :
    s0( a0 ) --> s1;
    s1( a1 ) --> s2;
    s2( a2 ) --> s0;
  end
  
end
