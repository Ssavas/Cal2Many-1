
// RowSort.cal
//
// Author: David B. Parlour (dave.parlour@xilinx.com)
//

// Read row queue and write pairs of data to IDCT FairMerge

actor RowSort ( int sz ) int(size=sz) ROW ==> int(size=sz) Y0, int(size=sz) Y1 :

  int(size=sz) x0;
  int(size=sz) x1;
  int(size=sz) x2;
  int(size=sz) x3;
  int(size=sz) x5;
  
  a0.cc.ddd.fff: action ROW:[a] ==>
  do x0 := a; end

  a1: action ROW:[a] ==>
  do x1 := a; end

  a2: action ROW:[a] ==>
  do x2 := a; end

  a3: action ROW:[a] ==>
  do x3 := a; end

  a4: action ROW:[a] ==> Y0:[x0], Y1:[a]
  end  

  a5: action ROW:[a] ==>
  do x5 := a; end

  a6: action ROW:[a] ==> Y0:[x2], Y1:[a]
  end  

  a7: action ROW:[a] ==> Y0:[x1], Y1:[a]
  end
 
  a8: action ROW:[a] ==> Y0:[x5], Y1:[x3]
  do x0 := a; end

  a9: action ==> Y0:[x5], Y1:[x3]
  end
  
   schedule fsm s0 :
    s0( a0 ) --> s1;
    s1( a1 ) --> s2;
    s2( a2 ) --> s3;
    s3( a3 ) --> s4;
    s4( a4 ) --> s5;
    s5( a5 ) --> s6;
    s6( a6 ) --> s7;
    s7( a7 ) --> s8;
    s8( a8 ) --> s1;
    s8( a9 ) --> s0;
  end

  priority
    a8 > a9;
  end
   
end