

// Combine.cal
//
// Author: David B. Parlour (dave.parlour@xilinx.com)
//

// idct1d pipeline stage

import all caltrop.lib.BitOps;

actor Combine ( int isz, int osz )
    int(size=isz) X0, int(size=isz) X1, int(size=isz) X2, int(size=isz) X3, bool ROW ==>
    int(size=osz) Y0, int(size=osz) Y1 :

  int count := 0;



  row: action X0:[a], X1:[b], X2:[c], X3:[d], ROW:[r] ==>
         Y0:[ y0 ], Y1:[ y1 ]
  guard r
  var
    bool s = (count = 0),
    int(size=isz) o = if s then 128 else 0 end,
    int(size=isz) y0 = (a + d) + o,
    int(size=isz) y1 = (b - c) + o
  do
    count := bitand( count + 1, 3 );
  end
  
  col: action X0:[a], X1:[b], X2:[c], X3:[d], ROW:[r] ==>
         Y0:[ rshift(y0,3) ], Y1:[ rshift(y1,3) ]
  var
    bool s = (count = 0),
    int(size=isz) o = if s then 65536 else 4 end,
    int(size=isz) y0 = (a + d) + o,
    int(size=isz) y1 = (b - c) + o
  do
    count := bitand( count + 1, 3 );
  end
  
  priority
    row > col;
  end
  
end